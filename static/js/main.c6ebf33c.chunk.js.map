{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyPressed","event","setState","key","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZH,WAA0B,MAAdE,EAAME,IACd,QACAF,EAAME,OAjBhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,cAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,cAV5C,oBAqBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAU,kCACoBA,GAC3B,kCA7Bd,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.c6ebf33c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPressed);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.keyPressed);\n  }\n\n  keyPressed = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key === ' '\n        ? 'Space'\n        : event.key,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is ${pressedKey}`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}